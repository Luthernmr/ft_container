
---------------------------
----   [33mSUBJECT TESTS[0m   ----
---------------------------
should be constant with the same seed: 899259965
abcdefghijklmnopqrstuvwxyz
( -1063596 microsec )

---------------------------
----       [31mVECTOR[0m       ----
---------------------------

---------------------------
----    [33mconstructor[0m    ----
---------------------------
The contents of fifth are:
 16 2 77 29
( 228 microsec )


---------------------------
----     [33moperator=[0m     ----
---------------------------
Size of foo and bar:
3 and 3
( 214 microsec )


---------------------------
----     [33mbegin_end[0m     ----
---------------------------
myvector contains:
 1 2 3 4 5
( 446 microsec )


---------------------------
----    [33mrbegin_rend[0m    ----
---------------------------
myvector contains:
 5 4 3 2 1
( 338 microsec )


---------------------------
----        [33msize[0m        ----
---------------------------
size:
0, 10, 20, 19
( 370 microsec )


---------------------------
----      [33mmax_size[0m      ----
---------------------------
size, capacity and max_size:
100, 128 and 2305843009213693951
( 360 microsec )


---------------------------
----       [33mresize[0m       ----
---------------------------
myvector contains:
 1 2 3 4 5 100 100 100 0 0 0 0
( 302 microsec )


---------------------------
----      [33mcapacity[0m      ----
---------------------------
size, capacity and max_size:
100, 128 and 2305843009213693951
( 272 microsec )


---------------------------
----       [33mempty[0m       ----
---------------------------
total:
55
( 296 microsec )


---------------------------
----      [33mreserve[0m      ----
---------------------------
capacity changed:
1, 2, 4, 8, 16, 32, 64, 128, 
100, 
( 544 microsec )


---------------------------
----     [33moperator[][0m     ----
---------------------------
myvector contains:
 9 8 7 6 5 4 3 2 1 0
( 230 microsec )


---------------------------
----         [33mat[0m         ----
---------------------------
myvector contains:
 0 1 2 3 4 5 6 7 8 9
( 210 microsec )


---------------------------
----       [33mfront[0m       ----
---------------------------
myvector.front() is now 62
( 230 microsec )


---------------------------
----        [33mback[0m        ----
---------------------------
myvector contains:
 10 9 8 7 6 5 4 3 2 1 0
( 212 microsec )


---------------------------
----       [33massign[0m       ----
---------------------------
Size:
7, 5, 3
( 212 microsec )


---------------------------
----     [33mpush_back[0m     ----
---------------------------
myvector stores 100 numbers.
( 10 microsec )


---------------------------
----      [33mpop_back[0m      ----
---------------------------
The elements of myvector add up to 600
( 222 microsec )


---------------------------
----       [33minsert[0m       ----
---------------------------
myvector contains:
 501 502 503 300 300 400 400 200 100 100 100
( 222 microsec )


---------------------------
----       [33merase[0m       ----
---------------------------
myvector contains:
 4 5 7 8 9 10
( 222 microsec )


---------------------------
----        [33mswap[0m        ----
---------------------------
foo and bar contain:
 200 200 200 200 200 100 100 100
( 216 microsec )


---------------------------
----       [33mclear[0m       ----
---------------------------
myvector contains:
 100 200 300 1101 2202
( 222 microsec )


---------------------------
----   [33mget_allocator[0m   ----
---------------------------
The allocated array contains:
 0 1 2 3 4
( 216 microsec )


---------------------------
----     [33moperators[0m     ----
---------------------------
235
( 220 microsec )


---------------------------
----   [33mswap (vector)[0m   ----
---------------------------
foo and bar contain:
 200 200 200 200 200 100 100 100
( 288 microsec )

---------------------------
----        [31mMAP[0m        ----
---------------------------

---------------------------
----    [33mconstructor[0m    ----
---------------------------
Size of second: 4
Size of first: 0
Size of second: 4
( 26 microsec )


---------------------------
----     [33miterators[0m     ----
---------------------------
a => 200
b => 100
c => 300
z => 300
y => 200
x => 100
( 16 microsec )


---------------------------
----   [33mempty and size[0m   ----
---------------------------
a => 10
b => 20
c => 30
mymap.size() is 0
mymap.max_size() is 230584300921369395
( 6 microsec )


---------------------------
----   [33melement access[0m   ----
---------------------------
mymap['a'] is an element
mymap['b'] is another element
mymap['c'] is another element
mymap['d'] is 
mymap now contains 4 elements.
( 22 microsec )


---------------------------
----       [33minsert[0m       ----
---------------------------
element 'z' already existed with a value of 200
mymap contains:
a => 100
b => 300
c => 400
z => 200
anothermap contains:
a => 100
b => 300
( 12 microsec )


---------------------------
----       [33merase[0m       ----
---------------------------
a => 10
d => 40
( 12 microsec )


---------------------------
----        [33mswap[0m        ----
---------------------------
foo contains:
a => 11
b => 22
c => 33
bar contains:
x => 100
y => 200
( 14 microsec )


---------------------------
----       [33mclear[0m       ----
---------------------------
mymap contains:
x => 100
y => 200
z => 300
mymap contains:
a => 1101
b => 2202
( 8 microsec )


---------------------------
----      [33mkey_comp[0m      ----
---------------------------
mymap contains:
a => 100
b => 200
c => 300
( 6 microsec )


---------------------------
----     [33mvalue_comp[0m     ----
---------------------------
mymap contains:
x => 1001
y => 2002
z => 3003
( 6 microsec )


---------------------------
----        [33mfind[0m        ----
---------------------------
elements in mymap:
a => 50
c => 150
d => 200
( 10 microsec )


---------------------------
----       [33mcount[0m       ----
---------------------------
a is an element of mymap.
b is not an element of mymap.
c is an element of mymap.
d is not an element of mymap.
e is not an element of mymap.
f is an element of mymap.
g is not an element of mymap.
( 8 microsec )


---------------------------
----       [33mbounds[0m       ----
---------------------------
a => 20
e => 100
( 12 microsec )


---------------------------
----    [33mequal_range[0m    ----
---------------------------
lower bound points to: b => 20
upper bound points to: c => 30
( 6 microsec )


---------------------------
----     [33mallocator[0m     ----
---------------------------
The allocated array has a size of  bytes.
( 0 microsec )

---------------------------
----       [31mSTACK[0m       ----
---------------------------

---------------------------
----    [33mconstructor[0m    ----
---------------------------
size of first: 0
size of second: 0
size of third: 2
size of fourth: 0
( 30 microsec )


---------------------------
----       [33mempty[0m       ----
---------------------------
total: 55
( 8 microsec )


---------------------------
----        [33msize[0m        ----
---------------------------
0. size: 0
1. size: 5
2. size: 4
( 6 microsec )


---------------------------
----        [33mtop[0m        ----
---------------------------
mystack.top() is now 15
( 4 microsec )


---------------------------
----    [33mpush and pop[0m    ----
---------------------------
Popping out elements... 4 3 2 1 0
( 246 microsec )


---------------------------
----     [33moperators[0m     ----
---------------------------
235
( 242 microsec )

